%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (INRS) (INRS)%%Title: (C - Corrosif eps)%%CreationDate: (4/4/01) (9:57 AM)%%BoundingBox: 224 305 380 484%%HiResBoundingBox: 224.0342 305.728 379.9658 483.9658%%DocumentProcessColors: Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Enregistrement])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 30 35 582 761%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 1%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 98 540 1.5 635 437 18 0 1 2 40 0 0%AI5_OpenViewLayers: 7%%PageOrigin:30 35%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -31 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Bandes jaunes)(Bandes jaunes) 8.4499 4.6 80.4499 76.6 [%AI3_Tile(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D0 XR8.1999 8.1999 m80.6999 8.1999 LS8.1999 22.6 m80.6999 22.6 LS8.1999 37.0001 m80.6999 37.0001 LS8.1999 51.3999 m80.6999 51.3999 LS8.1999 65.8 m80.6999 65.8 LS8.1999 15.3999 m80.6999 15.3999 LS8.1999 29.8 m80.6999 29.8 LS8.1999 44.1999 m80.6999 44.1999 LS8.1999 58.6 m80.6999 58.6 LS8.1999 73.0001 m80.6999 73.0001 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp3 Bn%AI5_BeginGradient: (Jaune-bleu radial)(Jaune-bleu radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_BS%_0 0.08 0.67 0 1 50 14 Bs1 1 0 0 1 50 100 %_BS%_1 1 0 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Noir-blanc)(Noir-blanc) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Rouge-jaune)(Rouge-jaune) 0 2 Bd[0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EFEFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BFBFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999>01 %_Br[0 1 0.6 0 1 50 100 %_BS%_0 1 0.6 0 1 50 100 Bs0 0 1 0 1 50 0 %_BS%_0 0 1 0 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Enregistrement]) 0 Xs([Enregistrement]) Pc1 g(N=0) Pc0 g(N=100) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.75 g(N=25) Pc0.5 g(N=50) Pc0.25 g(N=75) Pc0 g(N=100) PcBb2 (Noir-blanc) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Noir-blanc) Pc0.25 0 0 0 k(C=25 M=0 J=0 N=0) Pc0.5 0 0 0 k(C=50 M=0 J=0 N=0) Pc0.75 0 0 0 k(C=75 M=0 J=0 N=0) Pc1 0 0 0 k(C=100 M=0 J=0 N=0) Pc0.25 0.25 0 0 k(C=25 M=25 J=0 N=0) Pc0.5 0.5 0 0 k(C=50 M=50 J=0 N=0) Pc0.75 0.75 0 0 k(C=75 M=75 J=0 N=0) Pc1 1 0 0 k(C=100 M=100 J=0 N=0) PcBb2 (Rouge-jaune) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Rouge-jaune) Pc0 0.25 0 0 k(C=0 M=25 J=0 N=0) Pc0 0.5 0 0 k(C=0 M=50 J=0 N=0) Pc0 0.75 0 0 k(C=0 M=75 J=0 N=0) Pc0 1 0 0 k(C=0 M=100 J=0 N=0) Pc0 0.25 0.25 0 k(C=0 M=25 J=25 N=0) Pc0 0.5 0.5 0 k(C=0 M=50 J=50 N=0) Pc0 0.75 0.75 0 k(C=0 M=75 J=75 N=0) Pc0 1 1 0 k(C=0 M=100 J=100 N=0) PcBb0 0 0 0 Bh2 (Jaune-bleu radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Jaune-bleu radial) Pc0 0 0.25 0 k(C=0 M=0 J=25 N=0) Pc0 0 0.5 0 k(C=0 M=0 J=50 N=0) Pc0 0 0.75 0 k(C=0 M=0 J=75 N=0) Pc0 0 1 0 k(C=0 M=0 J=100 N=0) Pc0.25 0 0.25 0 k(C=25 M=0 J=25 N=0) Pc0.5 0 0.5 0 k(C=50 M=0 J=50 N=0) Pc0.75 0 0.75 0 k(C=75 M=0 J=75 N=0) Pc1 0 1 0 k(C=100 M=0 J=100 N=0) Pc(Bandes jaunes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Bandes jaunes) Pc0.25 0.125 0 0 k(C=25 M=13 J=0 N=0) Pc0.5 0.25 0 0 k(C=50 M=25 J=0 N=0) Pc0.75 0.375 0 0 k(C=75 M=38 J=0 N=0) Pc1 0.5 0 0 k(C=100 M=50 J=0 N=0) Pc0.125 0.25 0 0 k(C=13 M=25 J=0 N=0) Pc0.25 0.5 0 0 k(C=25 M=50 J=0 N=0) Pc0.375 0.75 0 0 k(C=38 M=75 J=0 N=0) Pc0.5 1 0 0 k(C=50 M=100 J=0 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0 0.25 0.125 0 k(C=0 M=25 J=13 N=0) Pc0 0.5 0.25 0 k(C=0 M=50 J=25 N=0) Pc0 0.75 0.375 0 k(C=0 M=75 J=38 N=0) Pc0 1 0.5 0 k(C=0 M=100 J=50 N=0) Pc0 0.125 0.25 0 k(C=0 M=13 J=25 N=0) Pc0 0.25 0.5 0 k(C=0 M=25 J=50 N=0) Pc0 0.375 0.75 0 k(C=0 M=38 J=75 N=0) Pc0 0.5 1 0 k(C=0 M=50 J=100 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0 0.25 0 k(C=13 M=0 J=25 N=0) Pc0.25 0 0.5 0 k(C=25 M=0 J=50 N=0) Pc0.375 0 0.75 0 k(C=38 M=0 J=75 N=0) Pc0.5 0 1 0 k(C=50 M=0 J=100 N=0) Pc0.25 0 0.125 0 k(C=25 M=0 J=13 N=0) Pc0.5 0 0.25 0 k(C=50 M=0 J=25 N=0) Pc0.75 0 0.375 0 k(C=75 M=0 J=38 N=0) Pc1 0 0.5 0 k(C=100 M=0 J=50 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.25 0.125 0.125 0 k(C=25 M=13 J=13 N=0) Pc0.5 0.25 0.25 0 k(C=50 M=25 J=25 N=0) Pc0.75 0.375 0.375 0 k(C=75 M=38 J=38 N=0) Pc1 0.5 0.5 0 k(C=100 M=50 J=50 N=0) Pc0.25 0.25 0.125 0 k(C=25 M=25 J=13 N=0) Pc0.5 0.5 0.25 0 k(C=50 M=50 J=25 N=0) Pc0.75 0.75 0.375 0 k(C=75 M=75 J=38 N=0) Pc1 1 0.5 0 k(C=100 M=100 J=50 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0.25 0.125 0 k(C=13 M=25 J=13 N=0) Pc0.25 0.5 0.25 0 k(C=25 M=50 J=25 N=0) Pc0.375 0.75 0.375 0 k(C=38 M=75 J=38 N=0) Pc0.5 1 0.5 0 k(C=50 M=100 J=50 N=0) Pc0.125 0.25 0.25 0 k(C=13 M=25 J=25 N=0) Pc0.25 0.5 0.5 0 k(C=25 M=50 J=50 N=0) Pc0.375 0.75 0.75 0 k(C=38 M=75 J=75 N=0) Pc0.5 1 1 0 k(C=50 M=100 J=100 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0.125 0.25 0 k(C=13 M=13 J=25 N=0) Pc0.25 0.25 0.5 0 k(C=25 M=25 J=50 N=0) Pc0.375 0.375 0.75 0 k(C=38 M=38 J=75 N=0) Pc0.5 0.5 1 0 k(C=50 M=50 J=100 N=0) Pc0.25 0.125 0.25 0 k(C=25 M=13 J=25 N=0) Pc0.5 0.25 0.5 0 k(C=50 M=25 J=50 N=0) Pc0.75 0.375 0.75 0 k(C=75 M=38 J=75 N=0) Pc1 0.5 1 0 k(C=100 M=50 J=100 N=0) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Module externe D\216grad\216 de formes Adobe) (D\216grad\216s)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module Adobe Forme de motif) (Forme artistique)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module Adobe Forme artistique) (Forme artistique)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Annuler Nouvelle forme calligraphique) (Forme calligraphique)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module Adobe Forme diffuse) (Forme diffuse)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(Calque 1) Ln0 Au1 Ap0 O0 g800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR379.9658 328.0342 m379.9658 483.9658 L224.0342 483.9658 L224.0342 328.0342 L379.9658 328.0342 Lf0 0.4 1 0 k374.8647 333.1353 m374.8647 478.8647 L229.1353 478.8647 L229.1353 333.1353 L374.8647 333.1353 LfU*u0 Ap0 g341 454.7188 m341.8438 454.5938 342.75 455 343.5313 454.7188 c343.6875 454.6875 343.8438 454.0938 344.25 454 C344.25 449.8125 344.5938 445.875 344.9688 442.5 c345.0313 441.6875 345.9688 439.4063 346.0625 439.25 c346.6875 437.875 346.5 437.0625 347.125 435.6563 c347.375 435.0625 348.4063 434.0938 348.5625 433.5 c348.6563 433.0938 349.2813 431.6875 y349.5938 430.8438 350.375 429.875 y351.9688 426.5938 354.8125 418.125 349.2813 417.2813 c348.4688 417.1563 347.5938 417.625 346.7813 418 c342.7813 419.9375 344.7188 425.7813 345.3125 429.875 C344 431.5625 342.125 433.8125 341 434.2188 c338.375 435.1563 333.0313 433.6875 331.2813 433.5 c324.7188 432.7188 310.4063 431.6875 y305.1563 430.9688 300.9688 431 295.6563 430.5938 c294.0625 430.5 290.9688 429.875 288.8125 430.25 c288.4688 430.3125 285.6875 431.0938 285.2188 431.3125 c283.8438 432 282.7188 433.9688 282.3125 435.6563 c281.6875 438.2813 282 441.875 283.4063 443.5625 c283.5625 443.75 284.625 444.5313 284.8438 444.6563 c285.2188 444.875 288 446.25 288.8125 446.4375 c292.5 447.4375 307 448.125 309.6875 448.25 c311.125 448.3125 317.7188 448.9063 319.4063 448.9688 c320.5 449.0313 335.1563 449.0625 338.5 450.7813 c339 451.0313 340.75 454.125 341 454.7188 Cf1 D339.5625 445.7188 m338.625 445.4063 337.1875 444.4688 336.3125 444.2813 c334.7188 444 332.9063 444.4063 331.2813 444.2813 c330.5938 444.25 328 443.625 327.3125 443.5625 c323.0625 443.25 320.1563 442.8438 316.1563 442.8438 C316.125 442.7813 314.5 442.8438 314.375 442.8438 c313.6563 442.9063 312.0313 442.3125 311.125 442.125 C311.1875 442.0938 312.0313 441.0938 312.2188 441.0313 c313.7188 440.6563 314 441.5 315.8125 441.4063 c317.9375 441.3125 321.8438 440.6875 324.0938 440.6875 c326.6875 440.6875 329.75 441.1875 332 441.0313 c333.4375 440.9688 338.125 440.3125 339.5625 440.6875 c339.625 440.7188 340.4063 441.3438 340.6563 441.4063 C340.6875 442.0313 340.75 444.2188 340.2813 445.375 c339.5625 445.7188 Lf*U*u0 D258.2188 432.0313 m259.375 431.6875 260.2188 431.9375 261.0938 431.3125 c262.2813 430.5313 261.5 429.875 262.1563 428.8125 c263.0938 427.5938 263.25 427.375 v263.25 427.3438 265.2188 426.0313 265.4063 425.9375 C265.4063 425.8125 271.4375 425.4688 273.3125 425.2188 c278.5 424.8125 280.1563 424.5 v286.5 424 288.8125 423.7813 v289.4375 423.7188 297.2813 422.9375 299.25 422.6875 c307.4688 422.125 311.125 421.25 v311.1563 421.25 313.9063 420 314.7188 419.4375 c315.5938 418.875 317.8125 415.2813 317.9688 414.0313 c318.2188 412.0938 317.4063 410.875 316.875 409.7188 c315.4688 406.6875 311.9063 405.3438 307.1563 405.7813 c306.9063 405.8125 300.4063 406.1875 298.5313 406.5 c291.5 407 288.8125 407.2188 v284.7813 407.5 279.2813 407.8125 274.7813 408.2813 c272.0313 408.5938 264.6563 410.125 261.0938 409 c260.7188 408.9063 257.8438 405.4063 y257.125 405.4063 l256.7813 404.125 258.5625 400.375 y259.1563 398.125 261.0625 391.5 258.2188 390.2813 c256.7813 389.6875 254.7188 389.9063 253.5313 390.6563 c252.0313 391.5938 252.1563 392.7813 251.7188 394.9688 c251 397.5 l251.2188 398.125 252.3438 407.625 252.4375 407.9375 c252.75 409.0625 254.0938 412.9375 254.25 413.3125 c254.625 414.4063 255.375 417.875 255.6875 418 c256.25 418.3125 256.25 427.8125 256.7813 428.0938 C256.7813 428.8125 256.7813 429.5313 256.7813 430.25 C256.7813 430.375 256.7813 430.4688 256.7813 430.5938 C256.9375 431.1875 257.9375 431.5938 258.2188 432.0313 Cf1 D262.1563 421.25 m261.125 419.125 261.2188 418.9375 261.4375 416.2188 C265.9688 415.5313 275.8438 415.125 y280.0313 414.75 284.6875 415.5 288.8125 415.5 c293.0938 415.5 300 415.375 304.2813 415.5 c305.9688 415.5313 306.9688 414.6875 308.5938 415.125 c309.3125 415.8438 L307.625 415.9688 304.2813 416.5625 y302.6563 417.1875 300.8438 416.625 298.875 416.9375 c296.6875 417.25 295.6563 417.2813 v292.4063 417.4375 287.8438 418.3125 284.5 418.7188 c277.0313 419.6875 268.875 419.5938 262.1563 421.25 Cf*U0 D348.1665 414.0625 m348.2603 413.9063 348.9688 411.2813 349.3125 410 c349.7188 408.5313 351.4063 405.6875 351.8125 404.0625 c352.25 402.3125 353.2266 396.0469 349.25 396.125 c346.0625 396.1875 345 397.8125 y344.4375 398.375 343.5625 400.375 y343.2188 402.7813 344.0674 406.2339 344.3335 407.896 c344.5 408.9375 345.1533 410.7998 346.125 412 c346.6563 412.6563 347.854 413.8125 348.1665 414.0625 Cf336.3125 390.1875 m335.8784 391.4102 332.375 393.979 331.5 394.729 c330.9688 395.1982 329.9375 396.0625 329.8438 396.7813 c329.8438 396.8125 329.0264 400.1382 329.1665 400.0625 c337.25 395.6875 337.5625 393.375 338.0625 388.375 C336.3125 390.1875 Lf338.7188 383.625 m338.6563 383.4375 337.9375 382.7188 337.7813 382.375 C337.4688 382.375 334.5938 384.875 334.5313 384.875 c333.4688 385.4063 330.5 387.8125 328.875 389.0625 c328.0625 390.625 327 391.875 V329.3125 391.9375 331.4395 391.3799 333.5 389.625 c337.5 386.2188 338.7188 383.625 Yf337.4063 397.8438 m337.2188 398.7813 337.375 399.125 337.0625 400 c336.7813 400.7188 336.0938 402.125 335.5938 402.875 c335.4063 403.2188 332.875 406.375 332.5625 407.0625 C333.1563 407.5938 334.7813 407.3438 335.8125 407.1875 C336.4063 407.0938 336.875 406.875 337.4063 406.5 c337.7813 406.2188 339.6875 403.8438 339.9375 403.5938 c340.0938 403.4375 341.5938 400.8125 341.7188 400.375 c342.2188 398.5 342.3335 395.229 341.6665 393.229 C337.4063 397.8438 Lf251.4165 377.8125 m251.4375 379.3853 253.7188 384.75 256.4063 386.6875 C257.3438 385.8125 258.2188 384.9375 258.9375 383.8125 c260 382.0625 261.2188 379.4063 260.7188 376.25 c260.5313 375.0313 259.5625 373.4375 258.5625 373 c257.0625 372.375 254.688 372.4697 253.5313 373.375 c252.3335 374.3125 251.396 376.2397 251.4165 377.8125 cf263.8018 383.354 m263.7114 384.8745 264.0049 386.7739 264.4063 388.0313 c264.4375 388.1875 268.0625 392.1875 268.375 392.3438 c269.0625 392.75 271.1875 393.9688 271.5938 394.1563 c272.7188 394.6563 275.9375 394.3647 277.2188 394.521 C277.2188 394.2397 274.6563 392.5313 274.8438 392.3438 C274.6875 392.2813 272.9688 390.6563 272.6875 390.5625 c272.2188 390.375 271.3125 389.4688 270.875 389.125 c269.0811 387.5981 267.9541 385.5723 267.9688 385.604 C263.8018 383.354 Lf262.896 372.9375 m262.7773 374.3486 263.375 375.9063 y263.7188 376.4688 265.1875 379.6563 265.5313 379.875 c267.25 382 268.0625 382.5625 V269.6875 384.5 272.25 385.5 V272.7188 385.6875 276.0625 386.1982 276.0625 386.104 C276.0938 386.2607 271.4375 381.5938 270.5625 380.5938 c268.625 378.3438 266.9688 377.1357 265.8125 374.104 c265.0708 372.749 265.396 372.521 V262.896 372.9375 Lf257 368.125 m261.4419 367.9717 262.25 370.9688 262.375 371.125 C282.9688 371.0938 290.1875 370.875 V290.3125 364 290.375 358.9375 290.25 352.8438 C271.5 352.875 244.5625 352.8438 233.375 352.8438 C233.1875 353.375 232.3345 367.9717 232.5625 370.9375 c232.625 371.75 247.7813 371.1875 251.25 371.1875 C251.5625 368.3125 257 368.125 vf244.6875 387.25 m243.5 391.75 239.5 395.229 v239.2764 395.4233 242.9375 395.5 244.75 393.9375 c250.5313 387.6563 250.6563 383.0938 V244.6875 387.25 Lf361.75 392.9375 m361.75 392.9063 362.8438 393.375 362.875 393.375 C362.3438 389.375 358.5 383.9375 y355.4688 383.3438 356.375 385.625 357.0625 386.4688 c357.3066 386.7686 358.3125 388.2813 358.5 388.5625 c359.3438 390 359.3125 390.5313 360.3125 391.875 c360.5625 392.2188 361.4688 392.625 361.75 392.9375 Cf348.5625 391.7188 m348.75 391.3438 349.2813 390.2813 y350.0625 389.0938 351.5313 386.9063 351.8125 385.5938 c352.7188 381.2188 351.375 376.5938 347.5 376.9688 c345.25 377.5 344.9688 377.6875 v344.75 377.8438 343.5313 379.5 y343.0938 380.875 343.6563 382.875 343.875 383.8125 c344.4063 386 348.3125 391.7188 348.5625 391.7188 Cf325.875 382 m327.0005 382 334.4688 382.5938 338.125 381.2813 c342.4063 377.0938 342.4375 376.9688 v343.1563 376.25 l343.6563 375.75 343.9063 374.6563 344.5938 374.4375 c348.3438 373.3438 353.125 376.4063 354.6875 377.6875 c354.6875 378.4063 l354.9063 379.0313 356.9688 379.9375 357.9375 379.8438 c359.6563 379.6875 360.8438 377.3438 362.25 376.5938 c362.6563 376.4063 363.7813 375.7813 364.4063 375.875 c364.875 375.9688 365.375 377.1875 365.8438 377.3125 c366.8125 377.5938 369.5625 377.625 370.5313 377.3125 c370.9063 377.2188 371.25 376.4063 371.5938 376.25 C370.9063 373.0625 370.7813 370.25 370.1563 366.5313 c369.4375 365.0938 l368.6563 359.3438 368.8438 352.9063 370.1563 348.5313 C375.3125 348.5313 375 348.8438 374.5 344.2188 C373.7813 344.3125 373.0313 344.125 372.3125 344.2188 c371 344.375 369.1563 344.6875 367.6563 344.9375 C366.9063 347.6875 366.4375 350.9063 365.8438 353.9375 C365.375 354.0313 364.8438 354.2813 364.7813 354.2813 c360.6563 355.5313 359.6875 352.3125 358.2813 351.7813 c358.0625 351.6875 357.2188 351.0313 y356.0625 350.5938 353.9688 349.9688 y351.3438 349.4375 347.9688 349.9688 345.3125 349.9688 c339.0313 349.9688 326.4688 349.5938 326.25 349.5938 c324.0313 349.75 321.1875 349.2813 319.0625 349.9688 c315.9063 351 316.0625 354.6875 314.7188 355.375 c313.4688 356 310.9688 355.4688 309.6875 356.0938 c307.5 357.1563 307.2188 360.4375 305.7188 362.2188 c305.2188 362.7813 303.9375 362.9688 303.5625 363.6563 c302.625 365.3125 302.6563 365.7188 302.4375 367.5 C302.5 369.125 303.3125 369.6563 303.5625 370.125 c303.8438 370.6875 305 370.7813 305.375 371.2188 c305.75 371.6875 305.6563 372.875 306.0938 373.375 c306.25 373.5625 306.625 374.375 306.625 374.4375 C307.4688 374.875 308.6875 374.6875 309.3125 375.1563 c309.3125 375.1875 310.5 376.396 y311.8125 376.8022 317.4063 376.25 319.0625 376.25 C320 376.25 319.625 375.5938 319.4375 376.25 C316.75 379.4063 319.9375 382 325.875 382 cf245.625 373.5625 m245.375 373.6875 242.4375 378.75 240.4375 381.375 c238.4375 384 236.75 385.4375 y236.75 386.6875 239.8125 386.5625 242.9375 385 c246.0625 383.4375 248.0625 377.6875 249.125 374.625 c245.875 373.4375 245.625 373.5625 vf355.875 392.4688 m353.875 394.375 354 393.9375 353.875 396.25 c353.7163 399.1836 355.9712 402.2744 359.875 403.4375 c362.8125 404.3125 365.4048 401.6563 362.875 400.5625 c360.5625 399.5625 358.75 398.125 357.0625 395.9375 c355.375 393.75 355.875 392.4688 yf*u266.9316 313.7949 m266.5957 315.1079 265.7471 316.0684 264.0825 316.0684 c261.6333 316.0684 260.6089 313.9072 260.6089 311.7144 c260.6089 309.5215 261.6333 307.3604 264.0825 307.3604 c265.8594 307.3604 266.8354 308.689 266.9956 310.354 c268.9482 310.354 L268.7886 307.6167 266.8516 305.728 264.0825 305.728 c260.6572 305.728 258.6084 308.4492 258.6084 311.7144 c258.6084 314.9795 260.6572 317.7007 264.0825 317.7007 c266.6597 317.6846 268.6924 316.2603 268.9326 313.7949 C266.9316 313.7949 lf*U*u274.7803 311.2183 m279.4385 311.2183 L279.4385 309.4893 L274.7803 309.4893 L274.7803 311.2183 lf*U*u294.9316 313.7949 m294.5957 315.1079 293.7471 316.0684 292.0825 316.0684 c289.6333 316.0684 288.6089 313.9072 288.6089 311.7144 c288.6089 309.5215 289.6333 307.3604 292.0825 307.3604 c293.8594 307.3604 294.8354 308.689 294.9956 310.354 c296.9482 310.354 L296.7886 307.6167 294.8516 305.728 292.0825 305.728 c288.6572 305.728 286.6084 308.4492 286.6084 311.7144 c286.6084 314.9795 288.6572 317.7007 292.0825 317.7007 c294.6597 317.6846 296.6924 316.2603 296.9326 313.7949 C294.9316 313.7949 lf*U*u298.127 310.1455 m298.127 312.6748 299.6475 314.4995 302.3047 314.4995 c304.9619 314.4995 306.4824 312.6748 306.4824 310.1455 c306.4824 307.6006 304.9619 305.7759 302.3047 305.7759 c299.6475 305.7759 298.127 307.6006 298.127 310.1455 cf1 D304.6577 310.1455 m304.6577 311.5703 303.9375 313.0586 302.3047 313.0586 c300.6719 313.0586 299.9517 311.5703 299.9517 310.1455 c299.9517 308.7051 300.6719 307.2163 302.3047 307.2163 c303.9375 307.2163 304.6577 308.7051 304.6577 310.1455 cf*U*u0 D307.9956 314.2754 m309.708 314.2754 L309.708 312.6748 L309.7402 312.6748 L309.9482 313.5552 311.0366 314.4995 312.1572 314.4995 c312.5732 314.4995 312.6855 314.4673 312.8457 314.4512 c312.8457 312.6909 L312.5894 312.7227 312.3174 312.7705 312.061 312.7705 c310.8125 312.7705 309.8203 311.7622 309.8203 309.9375 c309.8203 306 L307.9956 306 L307.9956 314.2754 lf*U*u313.6245 314.2754 m315.3369 314.2754 L315.3369 312.6748 L315.3691 312.6748 L315.5771 313.5552 316.6655 314.4995 317.7861 314.4995 c318.2021 314.4995 318.3145 314.4673 318.4746 314.4512 c318.4746 312.6909 L318.2183 312.7227 317.9463 312.7705 317.6899 312.7705 c316.4414 312.7705 315.4492 311.7622 315.4492 309.9375 c315.4492 306 L313.6245 306 L313.6245 314.2754 lf*U*u318.8691 310.1455 m318.8691 312.6748 320.3896 314.4995 323.0469 314.4995 c325.7041 314.4995 327.2246 312.6748 327.2246 310.1455 c327.2246 307.6006 325.7041 305.7759 323.0469 305.7759 c320.3896 305.7759 318.8691 307.6006 318.8691 310.1455 cf1 D325.3999 310.1455 m325.3999 311.5703 324.6797 313.0586 323.0469 313.0586 c321.4141 313.0586 320.6938 311.5703 320.6938 310.1455 c320.6938 308.7051 321.4141 307.2163 323.0469 307.2163 c324.6797 307.2163 325.3999 308.7051 325.3999 310.1455 cf*U*u0 D330.1143 308.6572 m330.2104 307.6006 331.0107 307.2163 331.9868 307.2163 c332.6753 307.2163 333.876 307.3604 333.8276 308.3047 c333.7798 309.2651 332.4512 309.3774 331.1226 309.6816 c329.7783 309.9697 328.4658 310.4497 328.4658 312.1304 c328.4658 313.9395 330.4185 314.4995 331.9229 314.4995 c333.6196 314.4995 335.1563 313.7949 335.3804 311.9546 c333.4756 311.9546 L333.3154 312.8188 332.5952 313.0586 331.7949 313.0586 c331.2666 313.0586 330.2905 312.9307 330.2905 312.2104 c330.2905 311.314 331.6348 311.186 332.9795 310.8818 c334.3081 310.5776 335.6523 310.0977 335.6523 308.4648 c335.6523 306.4961 333.6675 305.7759 331.9551 305.7759 c329.874 305.7759 328.3218 306.7041 328.2896 308.6572 C330.1143 308.6572 lf*U*u337.0864 314.2754 m338.9111 314.2754 L338.9111 306 L337.0864 306 L337.0864 314.2754 lf337.0864 317.4287 m338.9111 317.4287 L338.9111 315.6997 L337.0864 315.6997 L337.0864 317.4287 lf*U*u340.0776 314.2754 m341.438 314.2754 L341.438 314.9634 L341.438 317.0767 342.5425 317.4287 343.7271 317.4287 c344.3032 317.4287 344.7197 317.3965 345.0078 317.3164 c345.0078 315.8921 L344.7676 315.9561 344.5273 315.9878 344.1592 315.9878 c343.6631 315.9878 343.2627 315.812 343.2627 315.1235 c343.2627 314.2754 L344.8154 314.2754 L344.8154 312.915 L343.2627 312.915 L343.2627 306 L341.438 306 L341.438 312.915 L340.0776 312.915 L340.0776 314.2754 lf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF