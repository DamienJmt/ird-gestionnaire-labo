%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (INRS) (INRS)%%Title: (T+ - Tr\217s toxique eps)%%CreationDate: (4/4/01) (9:59 AM)%%BoundingBox: 223 303 380 484%%HiResBoundingBox: 223.9092 303.6509 379.8408 483.3408%%DocumentProcessColors: Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Enregistrement])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 38 6 574 786%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 592 840%AI5_RulerUnits: 1%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 126 636 2 676 822 26 0 1 429 40 0 0%AI5_OpenViewLayers: 7%%PageOrigin:38 6%%AI3_PaperRect:-28 812 567 -30%%AI3_Margin:28 -31 -29 30%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Bandes jaunes)(Bandes jaunes) 8.4499 4.6 80.4499 76.6 [%AI3_Tile(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D0 XR8.1999 8.1999 m80.6999 8.1999 LS8.1999 22.6 m80.6999 22.6 LS8.1999 37.0001 m80.6999 37.0001 LS8.1999 51.3999 m80.6999 51.3999 LS8.1999 65.8 m80.6999 65.8 LS8.1999 15.3999 m80.6999 15.3999 LS8.1999 29.8 m80.6999 29.8 LS8.1999 44.1999 m80.6999 44.1999 LS8.1999 58.6 m80.6999 58.6 LS8.1999 73.0001 m80.6999 73.0001 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp3 Bn%AI5_BeginGradient: (Jaune-bleu radial)(Jaune-bleu radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_BS%_0 0.08 0.67 0 1 50 14 Bs1 1 0 0 1 50 100 %_BS%_1 1 0 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Noir-blanc)(Noir-blanc) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Rouge-jaune)(Rouge-jaune) 0 2 Bd[0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EFEFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BFBFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999>01 %_Br[0 1 0.6 0 1 50 100 %_BS%_0 1 0.6 0 1 50 100 Bs0 0 1 0 1 50 0 %_BS%_0 0 1 0 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Enregistrement]) 0 Xs([Enregistrement]) Pc1 g(N=0) Pc0 g(N=100) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.75 g(N=25) Pc0.5 g(N=50) Pc0.25 g(N=75) Pc0 g(N=100) PcBb2 (Noir-blanc) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Noir-blanc) Pc0.25 0 0 0 k(C=25 M=0 J=0 N=0) Pc0.5 0 0 0 k(C=50 M=0 J=0 N=0) Pc0.75 0 0 0 k(C=75 M=0 J=0 N=0) Pc1 0 0 0 k(C=100 M=0 J=0 N=0) Pc0.25 0.25 0 0 k(C=25 M=25 J=0 N=0) Pc0.5 0.5 0 0 k(C=50 M=50 J=0 N=0) Pc0.75 0.75 0 0 k(C=75 M=75 J=0 N=0) Pc1 1 0 0 k(C=100 M=100 J=0 N=0) PcBb2 (Rouge-jaune) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Rouge-jaune) Pc0 0.25 0 0 k(C=0 M=25 J=0 N=0) Pc0 0.5 0 0 k(C=0 M=50 J=0 N=0) Pc0 0.75 0 0 k(C=0 M=75 J=0 N=0) Pc0 1 0 0 k(C=0 M=100 J=0 N=0) Pc0 0.25 0.25 0 k(C=0 M=25 J=25 N=0) Pc0 0.5 0.5 0 k(C=0 M=50 J=50 N=0) Pc0 0.75 0.75 0 k(C=0 M=75 J=75 N=0) Pc0 1 1 0 k(C=0 M=100 J=100 N=0) PcBb0 0 0 0 Bh2 (Jaune-bleu radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Jaune-bleu radial) Pc0 0 0.25 0 k(C=0 M=0 J=25 N=0) Pc0 0 0.5 0 k(C=0 M=0 J=50 N=0) Pc0 0 0.75 0 k(C=0 M=0 J=75 N=0) Pc0 0 1 0 k(C=0 M=0 J=100 N=0) Pc0.25 0 0.25 0 k(C=25 M=0 J=25 N=0) Pc0.5 0 0.5 0 k(C=50 M=0 J=50 N=0) Pc0.75 0 0.75 0 k(C=75 M=0 J=75 N=0) Pc1 0 1 0 k(C=100 M=0 J=100 N=0) Pc(Bandes jaunes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Bandes jaunes) Pc0.25 0.125 0 0 k(C=25 M=13 J=0 N=0) Pc0.5 0.25 0 0 k(C=50 M=25 J=0 N=0) Pc0.75 0.375 0 0 k(C=75 M=38 J=0 N=0) Pc1 0.5 0 0 k(C=100 M=50 J=0 N=0) Pc0.125 0.25 0 0 k(C=13 M=25 J=0 N=0) Pc0.25 0.5 0 0 k(C=25 M=50 J=0 N=0) Pc0.375 0.75 0 0 k(C=38 M=75 J=0 N=0) Pc0.5 1 0 0 k(C=50 M=100 J=0 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0 0.25 0.125 0 k(C=0 M=25 J=13 N=0) Pc0 0.5 0.25 0 k(C=0 M=50 J=25 N=0) Pc0 0.75 0.375 0 k(C=0 M=75 J=38 N=0) Pc0 1 0.5 0 k(C=0 M=100 J=50 N=0) Pc0 0.125 0.25 0 k(C=0 M=13 J=25 N=0) Pc0 0.25 0.5 0 k(C=0 M=25 J=50 N=0) Pc0 0.375 0.75 0 k(C=0 M=38 J=75 N=0) Pc0 0.5 1 0 k(C=0 M=50 J=100 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0 0.25 0 k(C=13 M=0 J=25 N=0) Pc0.25 0 0.5 0 k(C=25 M=0 J=50 N=0) Pc0.375 0 0.75 0 k(C=38 M=0 J=75 N=0) Pc0.5 0 1 0 k(C=50 M=0 J=100 N=0) Pc0.25 0 0.125 0 k(C=25 M=0 J=13 N=0) Pc0.5 0 0.25 0 k(C=50 M=0 J=25 N=0) Pc0.75 0 0.375 0 k(C=75 M=0 J=38 N=0) Pc1 0 0.5 0 k(C=100 M=0 J=50 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.25 0.125 0.125 0 k(C=25 M=13 J=13 N=0) Pc0.5 0.25 0.25 0 k(C=50 M=25 J=25 N=0) Pc0.75 0.375 0.375 0 k(C=75 M=38 J=38 N=0) Pc1 0.5 0.5 0 k(C=100 M=50 J=50 N=0) Pc0.25 0.25 0.125 0 k(C=25 M=25 J=13 N=0) Pc0.5 0.5 0.25 0 k(C=50 M=50 J=25 N=0) Pc0.75 0.75 0.375 0 k(C=75 M=75 J=38 N=0) Pc1 1 0.5 0 k(C=100 M=100 J=50 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0.25 0.125 0 k(C=13 M=25 J=13 N=0) Pc0.25 0.5 0.25 0 k(C=25 M=50 J=25 N=0) Pc0.375 0.75 0.375 0 k(C=38 M=75 J=38 N=0) Pc0.5 1 0.5 0 k(C=50 M=100 J=50 N=0) Pc0.125 0.25 0.25 0 k(C=13 M=25 J=25 N=0) Pc0.25 0.5 0.5 0 k(C=25 M=50 J=50 N=0) Pc0.375 0.75 0.75 0 k(C=38 M=75 J=75 N=0) Pc0.5 1 1 0 k(C=50 M=100 J=100 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0.125 0.25 0 k(C=13 M=13 J=25 N=0) Pc0.25 0.25 0.5 0 k(C=25 M=25 J=50 N=0) Pc0.375 0.375 0.75 0 k(C=38 M=38 J=75 N=0) Pc0.5 0.5 1 0 k(C=50 M=50 J=100 N=0) Pc0.25 0.125 0.25 0 k(C=25 M=13 J=25 N=0) Pc0.5 0.25 0.5 0 k(C=50 M=25 J=50 N=0) Pc0.75 0.375 0.75 0 k(C=75 M=38 J=75 N=0) Pc1 0.5 1 0 k(C=100 M=50 J=100 N=0) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Module externe D\216grad\216 de formes Adobe) (D\216grad\216s)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module Adobe Forme de motif) (Forme artistique)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module Adobe Forme artistique) (Forme artistique)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Annuler Nouvelle forme calligraphique) (Forme calligraphique)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module Adobe Forme diffuse) (Forme diffuse)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(Calque 1) Ln0 Au1 Ap0 O0 g800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR379.8408 327.4092 m379.8408 483.3408 L223.9092 483.3408 L223.9092 327.4092 L379.8408 327.4092 Lf0 0.4 1 0 k374.7397 332.5103 m374.7397 478.2397 L229.0103 478.2397 L229.0103 332.5103 L374.7397 332.5103 LfU*u0 Ap0 g238.6699 318.1367 m247.9214 318.1367 L247.9214 316.4082 L244.2881 316.4082 L244.2881 306.7085 L242.2871 306.7085 L242.2871 316.4082 L238.6699 316.4082 L238.6699 318.1367 lf252.0117 314.8076 m253.6445 314.8076 L253.6445 311.5742 L256.8618 311.5742 L256.8618 309.9414 L253.6445 309.9414 L253.6445 306.7085 L252.0117 306.7085 L252.0117 309.9414 L248.7944 309.9414 L248.7944 311.5742 L252.0117 311.5742 L252.0117 314.8076 lf262.8535 311.9263 m267.5112 311.9263 L267.5112 310.1978 L262.8535 310.1978 L262.8535 311.9263 lf272.8652 318.1367 m282.1167 318.1367 L282.1167 316.4082 L278.4834 316.4082 L278.4834 306.7085 L276.4824 306.7085 L276.4824 316.4082 L272.8652 316.4082 L272.8652 318.1367 lf283.1816 314.9839 m284.8945 314.9839 L284.8945 313.3828 L284.9263 313.3828 L285.1343 314.2632 286.2231 315.208 287.3433 315.208 c287.7598 315.208 287.8716 315.1758 288.0317 315.1597 c288.0317 313.3989 L287.7754 313.4312 287.5034 313.479 287.2476 313.479 c285.999 313.479 285.0063 312.4707 285.0063 310.646 c285.0063 306.7085 L283.1816 306.7085 L283.1816 314.9839 lf290.2354 310.374 m290.2354 309.0771 290.9395 307.9248 292.46 307.9248 c293.5166 307.9248 294.1567 308.3892 294.4771 309.3013 c296.2056 309.3013 L295.8057 307.4927 294.269 306.4844 292.46 306.4844 c289.8672 306.4844 288.4106 308.293 288.4106 310.8379 c288.4106 313.1909 289.9473 315.208 292.4121 315.208 c295.021 315.208 296.6216 312.855 296.3179 310.374 C290.2354 310.374 lf1 D294.4927 311.5742 m294.4287 312.7266 293.6445 313.7671 292.4121 313.7671 c291.1475 313.7671 290.2832 312.8066 290.2354 311.5742 C294.4927 311.5742 lf0 D292.0601 318.4092 m293.5166 316.1201 L292.188 316.1201 L289.915 318.4092 L292.0601 318.4092 lf299.0815 309.3652 m299.1777 308.3091 299.978 307.9248 300.9546 307.9248 c301.6426 307.9248 302.8433 308.0688 302.7954 309.0132 c302.7471 309.9736 301.4189 310.0859 300.0898 310.3896 c298.7456 310.6777 297.4331 311.1582 297.4331 312.8389 c297.4331 314.6475 299.3857 315.208 300.8906 315.208 c302.5874 315.208 304.124 314.5034 304.3477 312.6626 c302.4434 312.6626 L302.2832 313.5273 301.5625 313.7671 300.7622 313.7671 c300.2344 313.7671 299.2578 313.6392 299.2578 312.9189 c299.2578 312.0225 300.6025 311.8945 301.9468 311.5903 c303.2754 311.2861 304.6201 310.8062 304.6201 309.1733 c304.6201 307.2046 302.6353 306.4844 300.9224 306.4844 c298.8418 306.4844 297.2891 307.4126 297.2568 309.3652 C299.0815 309.3652 lf309.6191 314.9839 m310.9956 314.9839 L310.9956 317.4648 L312.8203 317.4648 L312.8203 314.9839 L314.4688 314.9839 L314.4688 313.623 L312.8203 313.623 L312.8203 309.2051 L312.8203 308.4531 312.8843 308.0688 313.7007 308.0688 c313.9565 308.0688 314.2129 308.0688 314.4688 308.1328 c314.4688 306.7241 L314.0688 306.6924 313.6846 306.6284 313.2842 306.6284 c311.3794 306.6284 311.0273 307.3647 310.9956 308.7412 c310.9956 313.623 L309.6191 313.623 L309.6191 314.9839 lf315.3911 310.854 m315.3911 313.3828 316.9121 315.208 319.5688 315.208 c322.2261 315.208 323.7466 313.3828 323.7466 310.854 c323.7466 308.3091 322.2261 306.4844 319.5688 306.4844 c316.9121 306.4844 315.3911 308.3091 315.3911 310.854 cf1 D321.9219 310.854 m321.9219 312.2788 321.2017 313.7671 319.5688 313.7671 c317.9365 313.7671 317.2163 312.2788 317.2163 310.854 c317.2163 309.4136 317.9365 307.9248 319.5688 307.9248 c321.2017 307.9248 321.9219 309.4136 321.9219 310.854 cf0 D327.4849 311.062 m324.6196 314.9839 L326.8286 314.9839 L328.5571 312.4385 L330.3657 314.9839 L332.479 314.9839 L329.6616 311.1582 L332.8311 306.7085 L330.6382 306.7085 L328.541 309.7656 L326.5083 306.7085 L324.3633 306.7085 L327.4849 311.062 lf333.8975 314.9839 m335.7227 314.9839 L335.7227 306.7085 L333.8975 306.7085 L333.8975 314.9839 lf333.8975 318.1367 m335.7227 318.1367 L335.7227 316.4082 L333.8975 316.4082 L333.8975 318.1367 lf345.5005 303.6509 m343.6758 303.6509 L343.6758 307.7808 L343.6436 307.7808 L343.0674 306.8682 341.9307 306.4844 340.8745 306.4844 c338.4253 306.4844 337.3052 308.5811 337.3052 310.8062 c337.3052 313.2231 338.5693 315.208 341.1787 315.208 c342.2349 315.208 343.2275 314.8076 343.7397 313.8633 c343.7715 313.8633 L343.7715 314.9839 L345.5005 314.9839 L345.5005 303.6509 lf1 D341.4189 307.9248 m343.0034 307.9248 343.7397 309.1094 343.7397 310.8379 c343.7397 312.6309 342.9395 313.7671 341.4189 313.7671 c339.9141 313.7671 339.1299 312.3428 339.1299 310.8379 c339.1299 309.3975 339.7539 307.9248 341.4189 307.9248 cf0 D354.7456 306.7085 m352.9526 306.7085 L352.9526 307.8608 L352.9209 307.8608 L352.4727 307.0283 351.48 306.4844 350.5679 306.4844 c348.4072 306.4844 347.4785 307.5728 347.4785 309.7334 c347.4785 314.9839 L349.3032 314.9839 L349.3032 309.9097 L349.3032 308.4531 349.8955 307.9248 350.8882 307.9248 c352.4087 307.9248 352.9209 308.9014 352.9209 310.1816 c352.9209 314.9839 L354.7456 314.9839 L354.7456 306.7085 lf358.0869 310.374 m358.0869 309.0771 358.791 307.9248 360.3115 307.9248 c361.3682 307.9248 362.0083 308.3892 362.3286 309.3013 c364.0571 309.3013 L363.6572 307.4927 362.1206 306.4844 360.3115 306.4844 c357.7188 306.4844 356.2622 308.293 356.2622 310.8379 c356.2622 313.1909 357.7988 315.208 360.2637 315.208 c362.8726 315.208 364.4736 312.855 364.1689 310.374 C358.0869 310.374 lf1 D362.3447 311.5742 m362.2803 312.7266 361.4961 313.7671 360.2637 313.7671 c358.999 313.7671 358.1348 312.8066 358.0869 311.5742 C362.3447 311.5742 lf*U*u249.3271 401.3804 m248.6489 400.312 247.4854 399.6265 247.3125 397.9375 c247.1963 396.9365 247.7109 396.1426 247.3125 394.5 c246.8125 392.4375 246.0625 392.9375 244.5 390.5 c244.3921 390.3315 244.6875 389.3125 245.4658 389.0962 C247.1216 389.1108 248.0645 388.8296 249.6875 389.0625 c251.2402 389.8652 l252.4248 390.2197 256.6528 389.1938 y257.248 389.043 259.9756 388.0352 260.6025 387.791 c261.5117 387.4551 264.4912 386.2622 264.9307 386.0474 c266.4048 385.4038 270.6719 383.5034 271.4556 383.229 c273.0864 382.5869 274.4912 382.7554 276.4932 382.5229 C276.375 385.3032 277.0356 384.8091 275.3989 386.1387 c274.0459 387.2207 272.0083 387.9214 270.3149 388.5942 c267.5547 389.7266 265.3589 390.6763 262.3804 391.7754 c262.1611 391.8672 258.2715 393.4893 256.6055 394.6001 c253.3931 397.416 252.9458 398.5371 v252.8501 398.7861 252.0601 399.7793 251.8711 399.9648 c251.5874 400.2441 250.875 402.1875 249.3271 401.3804 Cf354.8086 400.4888 m354.689 400.4526 353.043 398.6919 y351.0527 397.5493 349.9287 395.5493 348.0493 394.3354 c343.5625 391.4375 338.0674 388.6543 336.1968 388.1069 c335.0752 387.7534 333.3857 387.9263 332.6099 387.3569 c332.3613 387.167 332.252 381.791 332.6729 380.1382 C335.5361 381.5073 338.0596 382.373 340.9219 383.8354 c341.3579 384.0269 344.0659 385.3003 344.875 385.6514 c345.6846 386.0332 348.4229 387.3384 348.8281 387.4985 c349.1084 387.5947 352.1919 388.8091 352.7529 388.9702 c358.4375 389.4375 361.0244 390.105 V362 391.1875 361.9756 392.1445 360.9927 393.73 c360.5806 394.4136 359.2017 394.8394 358.8213 395.4922 c357.3296 398.1045 358.375 401.5625 354.8086 400.4888 cf317.2231 377.8472 m316.6953 377.4985 315.9805 377.0239 315.4199 376.7686 C316.4258 372.5586 317.6133 372.5688 318.2886 377.5127 C317.2231 377.8472 Lf327.2979 376.4976 m326.7441 375.4927 326.4751 374.084 326.2607 373.6133 c325.8916 372.9224 324.5117 369.9102 324.1421 369.2822 c324.0806 369.1563 322.166 366.5459 322.0107 366.3882 c320.9258 365.4102 318.6875 364 y317.6924 363.4287 316.7314 362.5605 315.9243 361.9912 c315.5508 361.7695 312.9688 360.4341 312.3462 360.1787 c310.8203 359.5405 307.2964 358.6968 y304.6152 357.9546 296.4531 358.5713 294.6968 359.3057 c293.6616 359.7344 291.1309 361.5088 290.125 362.1875 c289.4331 362.7129 287.8008 365.2461 287.4561 365.3677 c286.4741 366.8281 285.9995 367.5117 v285.6836 367.915 284.064 370.8696 283.4277 372.1455 c283.2368 372.5503 282.6948 373.7642 282.312 374.667 c282.2798 374.792 281.6221 374.9424 281.5898 375.0361 C281.9365 371.1323 282.5459 369.3252 283.481 366.0518 c285.7026 358.5713 287.8813 355.9961 v288.4497 355.3447 289.8047 354.0439 290.0566 353.8589 c293.2334 351.5117 299.1006 348.8438 305.2188 349.6787 c306.1548 349.8115 310.6479 350.6323 311.334 350.7944 c314.3271 351.6333 315.6338 352.2695 v315.7583 352.333 318.8667 354.2666 319.9526 355.1826 c320.355 355.5923 322.0898 357.3262 322.4302 357.7354 c324.0693 359.7188 326.6128 365.4912 326.6733 365.71 c326.7949 366.0864 327.3765 367.4976 y327.8013 368.9702 328.4688 374.8203 328.4043 375.0693 c328.3394 375.3501 327.3945 376.2168 327.2979 376.4976 Cf291.6772 375.8428 m291.6782 375.7178 291.4072 374.5591 291.3179 374.0269 C293.2319 373.1689 292.6694 373.1636 294.5679 374.0552 C294.5356 374.1802 293.7739 375.4858 293.8364 375.4863 C292.8657 375.6968 292.5864 375.5068 291.6772 375.8428 Cf311.1172 375.6372 m311.0269 375.2617 310.4346 375.0688 310.4048 374.9126 c309.8564 373.314 310.8394 371.666 311.1611 370.6064 C311.6904 370.8608 312.499 371.3057 312.9673 371.3408 C313.3311 372.6567 313.3252 373.313 313.6548 374.9409 C313.3398 375.188 313.0273 375.1855 312.9297 375.6533 C312.3984 375.6484 311.6187 375.4854 311.1172 375.6372 Cf297.8115 374.8027 m297.7217 374.333 297.3779 374.3301 297.0991 374.0771 C297.5498 372.5503 297.3853 369.9546 300.0024 370.8525 c300.1582 370.9165 300.3403 371.5117 300.7148 371.5776 C300.6128 372.5142 300.3491 374.0747 300.3145 374.4805 C299.5635 374.5679 298.8135 374.561 297.8115 374.8027 Cf306.811 374.8809 m306.249 374.8447 304.1606 374.2017 303.5674 374.1338 C303.5679 374.1025 303.5767 373.0713 303.5771 373.04 C302.9668 371.3472 303.2554 370.5371 v303.2876 370.3813 303.8833 370.1992 303.98 369.8247 C306.667 369.9419 309.5088 370.1543 308.2583 373.7998 c308.0977 374.2671 307.0645 374.4771 306.811 374.8809 Cf315.8579 369.5537 m314.4053 367.6968 314.6191 368.2925 314.7988 365.6064 C315.3003 365.4546 315.9243 365.5537 316.2393 365.2441 C316.7983 365.6553 316.9834 365.9692 317.6675 366.3506 C317.2798 367.8159 317.3057 368.4102 316.9204 369.5625 C316.8271 369.562 315.8896 369.4912 315.8579 369.5537 Cf292.8403 367.915 m292.8467 367.165 292.8555 366.165 292.8618 365.415 C292.8931 365.4155 292.8711 364.3838 292.8716 364.3213 C293.2773 364.3872 294.6499 364.6807 Y294.6406 365.7119 294.5986 366.9302 294.6211 367.9307 C294.2461 367.9272 293.1543 367.73 292.8403 367.915 Cf310.4707 367.3501 m310.2866 366.9736 309.478 366.5288 309.3862 366.2783 c309.1431 365.4946 309.5259 364.5918 309.4087 363.7471 C310.1309 363.3472 309.875 364.0322 310.1333 363.0347 C310.4458 363.0371 311.3198 363.2012 311.6021 363.0474 C312.0054 363.4258 312.0952 363.8643 312.6553 364.1191 C312.5537 365.0557 312.29 366.5845 312.2861 367.022 C311.6914 367.1421 311.0674 367.043 310.4707 367.3501 Cf298.9429 366.9058 m297.1528 364.3276 297.2466 364.3594 298.6465 361.4966 C299.4873 361.8164 300.1411 362.1035 300.7964 362.2344 C300.7852 363.4839 300.7725 364.9531 300.7617 366.2031 C300.1025 366.5098 299.5093 366.4731 298.9429 366.9058 Cf304.7275 366.5811 m304.543 366.2046 303.7642 365.9478 303.6426 365.5093 c302.5498 361.812 304.3896 362.3281 306.5493 361.9092 C306.7539 363.5674 306.7124 364.6924 306.5117 366.2529 C305.979 366.3735 305.23 366.2729 304.7275 366.5811 Cf329.605 362.8296 m328.7148 360.9468 327.728 359.4692 327.124 357.0576 C330.2969 355.1787 333.1523 353.8599 336.8833 352.4551 c338.1387 351.8408 338.3271 351.749 v338.9546 351.4419 342.4067 349.8154 343.3799 349.293 c343.6309 349.1699 347.1201 346.8564 348.4741 345.7119 c350.5928 342.8242 351.7207 342.5215 v352.5977 342.2793 353.689 342.6011 354.5957 342.5469 C354.8408 343.0801 355.5845 343.8052 355.6738 344.3374 c356.207 347.686 354.7153 346.7354 356.7202 349.7529 c361.1611 356.542 353.6558 353.5391 348.7422 354.3711 c347.7095 354.5498 346.5151 355.3203 345.4795 355.7803 c340.1465 358.1089 335.3701 361.1299 329.605 362.8296 Cf278.1128 361.6611 m277.3315 361.6543 275.3135 360.1055 274.5347 359.8486 c273.0386 359.3667 270.6719 358.4087 270.5786 358.3765 c268.4609 357.5142 265.1948 355.7671 263.4165 355.4077 c260.6396 354.9146 257.2227 356.1035 255.1357 355.3354 c254.3125 355.3125 254.0513 354.2632 V254.3125 353.125 254.5371 352.2988 255.1699 351.3979 c255.5815 350.8076 256.5859 350.2852 256.9985 349.6011 c257.9829 347.7661 257.2388 347.1035 259.186 346.0264 c259.9077 345.6577 l260.3447 345.7241 260.5059 345.1631 261.3486 345.3267 c262.2842 345.5225 262.519 347.2744 263.1108 347.4985 c263.8198 348.6294 264.1919 348.9453 v264.3779 349.1343 265.3062 350.2051 265.6167 350.3955 c265.8652 350.585 268.8794 352.5176 269.9072 352.9639 c271.1836 353.5376 273.5801 354.6523 273.8604 354.7798 c274.8862 355.3828 277.2231 356.1846 277.4409 356.2798 c278.998 356.8877 279.6816 357.3311 281.019 358.0928 C280.793 358.9346 281.0059 359.5928 280.2783 360.6177 c279.8354 361.2388 279.2373 361.7334 278.1128 361.6611 cf0 D355.5 386.5 m332 377 L331.6543 375.0977 L331.1982 373.625 331.9033 371.6001 331.6982 370.0669 c331.5806 369.2222 331.1528 368.0933 331.0107 366.4668 C331.4819 366.1895 333.0259 364.7344 333.1826 364.6733 c334.0933 364.1812 338.7676 362.1279 340.0547 361.4829 c341.4043 360.8076 345.2344 358.8408 345.8296 358.6582 c346.2368 358.5684 349.123 357.312 349.4355 357.2524 c350.5625 357.0435 352.1206 357.5884 352.6826 357.6558 c355.3057 357.8662 357.2461 357.5391 359.1572 356.9932 C360.0059 356.4697 360.2573 356.2529 v360.5093 356.0366 362.5 354.75 361.373 350.1689 c361.2246 349.564 359.7935 348.5298 359.6108 347.9971 c359.0918 346.5859 359.665 345.3721 359.2739 343.6499 c359.0933 342.8359 358.3223 341.6729 357.8613 340.7627 C357.2129 339.8506 356.8081 339.6909 v356.4033 339.5313 355.3457 338.9595 y353.9438 338.4468 352.4751 338.4653 351.0332 338.9214 c349.9971 339.4751 349.5898 339.6279 v349.3701 339.6885 349.0503 340.5605 348.8618 340.6841 c347.3516 341.7959 346.2764 343.2554 344.8618 344.2432 c343.855 344.9844 341.624 346.3711 y339.9595 347.3252 336.2871 349.1685 336.1929 349.23 c334.9688 349.813 332.6494 350.5742 332.5864 350.6362 c330.9839 351.6221 327.5024 353.0918 Y326.2803 353.4873 325.3403 353.7607 324.2744 354.1577 C322.8169 352.8008 321.3311 351.1943 319.6216 350.1479 c318.4087 349.4497 315.7959 348.021 315.6714 347.957 c314.7998 347.5747 311.6523 346.5469 311.3716 346.4819 c310.2798 346.2539 306.3472 345.7192 y301.3853 344.8633 295.4053 346.124 291.9224 347.75 c291.6396 347.9038 289.8174 349.0127 289.0317 349.5371 c287.4292 350.5234 284.9907 354.2207 282.4941 353.793 c282.1567 353.0713 l280.5996 352.4639 279.5737 351.8296 278.2041 351.2241 c275.0591 349.9155 271.3809 348.8516 268.8979 346.8301 c268.6494 346.6719 267.3564 344.4414 267.1079 344.2832 c266.584 343.4346 266.3984 343.2144 v264.9707 342.0454 264.5981 341.7612 v263.2944 340.7808 258.8071 339.2729 256.7051 340.2544 c256.2969 340.4385 254.6333 341.2676 254.1611 341.6699 c252.5811 343.6563 252.3584 344.1543 v251.8481 345.3062 252.125 345.7773 251.6172 346.6792 c250.8877 347.9541 249.8545 348.1328 249.064 349.1885 c247.8311 350.834 247.8687 353.6782 247.9419 356.0225 C248.5562 357.2466 248.9888 357.813 v249.3906 358.3477 251.1289 359.6445 Y251.3784 359.7402 252.498 360.3438 252.5605 360.3755 c255.7402 361.2471 258.7549 359.5859 261.5635 360.0791 c262.312 360.2422 266.0488 361.7432 267.3257 362.2856 c267.7925 362.5088 271.312 363.8833 271.9658 364.1387 c272.2461 364.2354 276.6372 365.9922 y276.7617 366.0869 277.1577 367.2471 277.3438 367.436 C277.2466 367.8101 276.6826 367.9927 276.6187 368.1484 c275.5615 371.1079 276.9048 374.7451 275.8276 376.4233 C274.25 377.5 L254.4995 385.2373 L248.0439 383.7437 L245.3286 383.3135 241.29 384.1533 240.4658 385.4585 c240.022 386.1738 238.6899 388.4121 239.3594 390.4805 c239.4497 390.8877 240.6294 391.8042 240.7813 392.3057 c240.7798 392.4619 241.7085 393.4697 241.8311 393.752 c242.1074 394.3169 242.0308 403.0981 244.2617 405.3052 c246.0303 406.7583 l247.959 407.7437 251.2476 406.96 252.877 406.4429 C254.7085 404.3027 l259.2573 398.7168 259.4458 398.5938 v261.7725 396.9888 264.8408 396.3281 267.7549 395.416 C267.4575 397.2886 266.8203 398.7207 266.6206 400.0938 C266.25 409.25 L259.75 419.75 255.25 433.25 260.75 445 c266.25 456.75 268.25 460.5 282 465.75 c295.75 471 297.25 470 309.75 469 c322.25 468 335.5 458 339 451.5 c342.5 445 348.25 433.75 344.25 422 c340.25 410.25 337.5 416 337.5 410.5 C338.2715 401.063 L338.0068 399.1543 337.5903 396.7441 337.6157 393.8696 C344.625 395.6875 347.6958 399.0825 348.0059 399.3667 c348.3159 399.6509 349.6484 400.6851 349.771 401.1636 c349.9375 401.8125 353.875 406.9375 359.124 403.7764 C361.3257 402.1392 362.0303 400.208 v362.2227 399.647 362.4561 397.9927 362.7739 397.3394 c362.9014 397.0591 364.0625 396.5068 364.2212 396.2583 c364.4741 395.9165 364.9487 395.2021 Y365.4932 393.7378 366.5391 392.0283 366.0898 389.8052 c365.9395 389.1479 364.1777 386.9136 363.5869 386.5332 C355.5 386.5 Lf*U0 0.4 1 0 k335.5835 419.0405 m335.5161 426.7588 338.3818 431.3779 336.145 437.0459 c335.2827 439.1323 334.6855 439.5649 v332.8931 440.8306 329.8052 440.147 329.2886 438.4551 c328.832 437.0449 330.3242 434.3701 330.4233 433.7773 c331.1699 427.002 329.2178 425.0791 329.8242 420.084 c329.8262 419.8027 331.2993 415.7842 y331.4604 415.1919 332.3228 413.0742 332.3867 412.9185 c332.9941 411.3613 333.8652 408.2437 y334.5527 404.6245 333.7124 397.0542 332.5439 394.9189 c332.3896 394.6362 331.4072 392.6279 330.7881 391.9971 c330.5088 391.7764 329.5801 390.7368 329.3628 390.5474 c328.4312 389.8828 324.9453 388.2588 323.9785 388 c323.6045 387.9033 320.4141 384.6563 318.9541 383.6436 c318.0845 383.0107 316.0313 381.9619 315.751 381.8032 c314.6006 381.168 311.4536 380.0781 311.0796 379.9497 c307.2148 378.791 298.6235 378.4346 295.6177 379.0962 c295.4297 379.1567 292.9536 379.9478 292.3584 380.1611 c291.9771 380.877 l291.6948 380.9683 290.9082 381.5864 y288.71 382.7861 287.6924 384.8398 285.8394 385.8545 c284.0166 387.0576 282.5737 387.6387 v280.1904 388.5869 276.7939 390.9946 275.3394 392.9824 c269.9639 400.1543 272.3433 410.4253 273.2974 419.2466 c273.7593 423.626 272.8389 428.8057 272.4658 432.1777 c272.2295 434.207 272.4868 436.9282 272.4155 437.9585 C269.4346 439.3389 268.5913 439.2378 267.0249 436.0991 C267.4023 435.8525 267.2173 435.5381 267.4097 435.0088 C267.3755 435.3208 267.0098 434.2549 267.0439 433.9429 c267.377 431.5708 268.2002 426.7964 267.8413 424.9492 C266.4165 423.4995 L263.25 432 264 445.25 271 452 c278 458.75 286.25 465 300 464.75 c313.75 464.5 328 458 333.25 451.25 c338.5 444.5 341 437.5 340.75 429.75 c340.5 422 339 422 337 418.25 C335.5835 419.0405 Lf0 g1 D313.9746 420.6646 m313.3828 420.4404 311.7988 419.2705 311.1118 419.2017 c311.0493 419.2012 308.9985 417.8706 308.937 417.7451 c308.7524 417.4312 307.2261 413.2612 307.9375 410.5488 c308.165 409.5508 311.0688 406.2632 311.5781 405.1738 c312.6606 402.9023 313.0044 399.3423 315.2314 398.3618 c316.8633 397.626 320.2979 397.9375 322.0752 398.4214 c326.7207 399.6812 330.752 406.8726 328.79 413.231 c327.9941 414.9116 327.6743 415.7524 V326.9453 416.9023 326.5962 417.5244 v326.2153 418.2085 324.418 420.0366 y323.6318 420.5923 321.5942 421.2935 321.5303 421.4492 C320.7173 421.5044 319.1523 421.8032 318.9961 421.8018 c318.1216 421.7007 314.9707 421.1104 313.9746 420.6646 cf280.4912 418.5596 m277.6875 416.5625 277.1841 414.374 276.9443 413.1533 c276.3159 409.9917 276.0645 406.5518 277.0327 403.0601 c277.6084 401.5337 277.7671 401.2852 v279.4126 398.9243 279.6016 398.7695 v280.105 398.3677 285.2188 396.0684 288.2451 396.6885 c288.8066 396.7876 291.604 398.562 291.8198 398.8765 c292.3755 399.6626 293.1704 401.6694 293.2632 401.7642 c293.6948 402.4551 295.0781 406.1182 295.125 406.25 c296.3589 409.7207 297.1875 410.6875 296.625 412.375 c292.625 417.9375 L289.75 420.5 285.23 419.8511 283.7314 419.6816 c283.0757 419.6133 280.8457 418.812 280.4912 418.5596 cf301.7017 383.8369 m302.4194 383.937 304.2554 384.8594 304.9106 384.9585 c305.8159 385.0913 307.9468 384.4229 309.5952 385.3433 c309.9058 385.5337 310.9248 386.9487 311.0166 387.1685 c312.6016 391.7759 307.3755 399.7622 305.4912 400.7769 c304 402.375 301.8818 402.5581 v295.748 403.0879 290.3682 382.5815 301.7017 383.8369 cfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF