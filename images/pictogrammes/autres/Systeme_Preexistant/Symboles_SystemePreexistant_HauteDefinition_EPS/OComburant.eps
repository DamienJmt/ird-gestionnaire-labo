%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (INRS) (INRS)%%Title: (O - Comburant eps)%%CreationDate: (4/4/01) (9:58 AM)%%BoundingBox: 224 307 380 484%%HiResBoundingBox: 224.0342 307.728 379.9658 483.9658%%DocumentProcessColors: Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Enregistrement])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 30 35 582 761%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 1%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 150 492 2 635 437 18 0 1 2 40 0 0%AI5_OpenViewLayers: 7%%PageOrigin:30 35%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -31 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Bandes jaunes)(Bandes jaunes) 8.4499 4.6 80.4499 76.6 [%AI3_Tile(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D0 XR8.1999 8.1999 m80.6999 8.1999 LS8.1999 22.6 m80.6999 22.6 LS8.1999 37.0001 m80.6999 37.0001 LS8.1999 51.3999 m80.6999 51.3999 LS8.1999 65.8 m80.6999 65.8 LS8.1999 15.3999 m80.6999 15.3999 LS8.1999 29.8 m80.6999 29.8 LS8.1999 44.1999 m80.6999 44.1999 LS8.1999 58.6 m80.6999 58.6 LS8.1999 73.0001 m80.6999 73.0001 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp3 Bn%AI5_BeginGradient: (Jaune-bleu radial)(Jaune-bleu radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_BS%_0 0.08 0.67 0 1 50 14 Bs1 1 0 0 1 50 100 %_BS%_1 1 0 0 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Noir-blanc)(Noir-blanc) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Rouge-jaune)(Rouge-jaune) 0 2 Bd[0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EFEFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BFBFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999>01 %_Br[0 1 0.6 0 1 50 100 %_BS%_0 1 0.6 0 1 50 100 Bs0 0 1 0 1 50 0 %_BS%_0 0 1 0 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Enregistrement]) 0 Xs([Enregistrement]) Pc1 g(N=0) Pc0 g(N=100) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.75 g(N=25) Pc0.5 g(N=50) Pc0.25 g(N=75) Pc0 g(N=100) PcBb2 (Noir-blanc) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Noir-blanc) Pc0.25 0 0 0 k(C=25 M=0 J=0 N=0) Pc0.5 0 0 0 k(C=50 M=0 J=0 N=0) Pc0.75 0 0 0 k(C=75 M=0 J=0 N=0) Pc1 0 0 0 k(C=100 M=0 J=0 N=0) Pc0.25 0.25 0 0 k(C=25 M=25 J=0 N=0) Pc0.5 0.5 0 0 k(C=50 M=50 J=0 N=0) Pc0.75 0.75 0 0 k(C=75 M=75 J=0 N=0) Pc1 1 0 0 k(C=100 M=100 J=0 N=0) PcBb2 (Rouge-jaune) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Rouge-jaune) Pc0 0.25 0 0 k(C=0 M=25 J=0 N=0) Pc0 0.5 0 0 k(C=0 M=50 J=0 N=0) Pc0 0.75 0 0 k(C=0 M=75 J=0 N=0) Pc0 1 0 0 k(C=0 M=100 J=0 N=0) Pc0 0.25 0.25 0 k(C=0 M=25 J=25 N=0) Pc0 0.5 0.5 0 k(C=0 M=50 J=50 N=0) Pc0 0.75 0.75 0 k(C=0 M=75 J=75 N=0) Pc0 1 1 0 k(C=0 M=100 J=100 N=0) PcBb0 0 0 0 Bh2 (Jaune-bleu radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BB(Jaune-bleu radial) Pc0 0 0.25 0 k(C=0 M=0 J=25 N=0) Pc0 0 0.5 0 k(C=0 M=0 J=50 N=0) Pc0 0 0.75 0 k(C=0 M=0 J=75 N=0) Pc0 0 1 0 k(C=0 M=0 J=100 N=0) Pc0.25 0 0.25 0 k(C=25 M=0 J=25 N=0) Pc0.5 0 0.5 0 k(C=50 M=0 J=50 N=0) Pc0.75 0 0.75 0 k(C=75 M=0 J=75 N=0) Pc1 0 1 0 k(C=100 M=0 J=100 N=0) Pc(Bandes jaunes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Bandes jaunes) Pc0.25 0.125 0 0 k(C=25 M=13 J=0 N=0) Pc0.5 0.25 0 0 k(C=50 M=25 J=0 N=0) Pc0.75 0.375 0 0 k(C=75 M=38 J=0 N=0) Pc1 0.5 0 0 k(C=100 M=50 J=0 N=0) Pc0.125 0.25 0 0 k(C=13 M=25 J=0 N=0) Pc0.25 0.5 0 0 k(C=25 M=50 J=0 N=0) Pc0.375 0.75 0 0 k(C=38 M=75 J=0 N=0) Pc0.5 1 0 0 k(C=50 M=100 J=0 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0 0.25 0.125 0 k(C=0 M=25 J=13 N=0) Pc0 0.5 0.25 0 k(C=0 M=50 J=25 N=0) Pc0 0.75 0.375 0 k(C=0 M=75 J=38 N=0) Pc0 1 0.5 0 k(C=0 M=100 J=50 N=0) Pc0 0.125 0.25 0 k(C=0 M=13 J=25 N=0) Pc0 0.25 0.5 0 k(C=0 M=25 J=50 N=0) Pc0 0.375 0.75 0 k(C=0 M=38 J=75 N=0) Pc0 0.5 1 0 k(C=0 M=50 J=100 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0 0.25 0 k(C=13 M=0 J=25 N=0) Pc0.25 0 0.5 0 k(C=25 M=0 J=50 N=0) Pc0.375 0 0.75 0 k(C=38 M=0 J=75 N=0) Pc0.5 0 1 0 k(C=50 M=0 J=100 N=0) Pc0.25 0 0.125 0 k(C=25 M=0 J=13 N=0) Pc0.5 0 0.25 0 k(C=50 M=0 J=25 N=0) Pc0.75 0 0.375 0 k(C=75 M=0 J=38 N=0) Pc1 0 0.5 0 k(C=100 M=0 J=50 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.25 0.125 0.125 0 k(C=25 M=13 J=13 N=0) Pc0.5 0.25 0.25 0 k(C=50 M=25 J=25 N=0) Pc0.75 0.375 0.375 0 k(C=75 M=38 J=38 N=0) Pc1 0.5 0.5 0 k(C=100 M=50 J=50 N=0) Pc0.25 0.25 0.125 0 k(C=25 M=25 J=13 N=0) Pc0.5 0.5 0.25 0 k(C=50 M=50 J=25 N=0) Pc0.75 0.75 0.375 0 k(C=75 M=75 J=38 N=0) Pc1 1 0.5 0 k(C=100 M=100 J=50 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0.25 0.125 0 k(C=13 M=25 J=13 N=0) Pc0.25 0.5 0.25 0 k(C=25 M=50 J=25 N=0) Pc0.375 0.75 0.375 0 k(C=38 M=75 J=38 N=0) Pc0.5 1 0.5 0 k(C=50 M=100 J=50 N=0) Pc0.125 0.25 0.25 0 k(C=13 M=25 J=25 N=0) Pc0.25 0.5 0.5 0 k(C=25 M=50 J=50 N=0) Pc0.375 0.75 0.75 0 k(C=38 M=75 J=75 N=0) Pc0.5 1 1 0 k(C=50 M=100 J=100 N=0) Pc0 0 0 0 k(C=0 M=0 J=0 N=0) Pc0.125 0.125 0.25 0 k(C=13 M=13 J=25 N=0) Pc0.25 0.25 0.5 0 k(C=25 M=25 J=50 N=0) Pc0.375 0.375 0.75 0 k(C=38 M=38 J=75 N=0) Pc0.5 0.5 1 0 k(C=50 M=50 J=100 N=0) Pc0.25 0.125 0.25 0 k(C=25 M=13 J=25 N=0) Pc0.5 0.25 0.5 0 k(C=50 M=25 J=50 N=0) Pc0.75 0.375 0.75 0 k(C=75 M=38 J=75 N=0) Pc1 0.5 1 0 k(C=100 M=50 J=100 N=0) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Module externe D\216grad\216 de formes Adobe) (D\216grad\216s)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module Adobe Forme de motif) (Forme artistique)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module Adobe Forme artistique) (Forme artistique)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Annuler Nouvelle forme calligraphique) (Forme calligraphique)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module Adobe Forme diffuse) (Forme diffuse)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(Calque 1) Ln0 Au1 Ap0 O0 g800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR379.9658 328.0342 m379.9658 483.9658 L224.0342 483.9658 L224.0342 328.0342 L379.9658 328.0342 Lf0 0.4 1 0 k374.8647 333.1353 m374.8647 478.8647 L229.1353 478.8647 L229.1353 333.1353 L374.8647 333.1353 LfU*u0 Ap0 g305.0938 474.375 m305.0938 474.3438 306.0938 474.375 306.1875 474.375 C305.625 471.4688 304.375 468.125 305.0938 464.3125 c305.1563 463.9375 306.0625 460.4375 306.1875 460 c306.4063 459.0313 307.625 457.6563 307.9688 456.75 c308.4375 455.5313 309.4375 452.125 309.7813 451.3438 C311.2188 449.5625 l311.9688 448.4063 312.1563 446.9688 312.6563 445.5938 C312.6875 445.625 313.4688 445.3438 313.75 445.2188 C314.5313 446.7813 314.9375 448.125 315.5313 449.9063 C315.8125 449.9063 316.3125 450.9478 316.5 451.104 C316.875 449.7915 318.7188 445.3438 318.7813 445.2188 c319.3438 444.3438 319.2813 443.5625 319.875 442.7188 c320.5313 441.7188 321.8125 440.625 322.375 439.4688 c324.6875 434.6563 325.9688 427.8125 325.9688 420.75 C326.6563 420.7188 326.25 420.2188 326.3438 419.6563 C327.0625 419.6563 L329.7813 423.9375 330.3125 426.875 330.3125 434.0625 C330.5938 433.6563 331 433.1875 331.375 432.625 c332.0938 431.5938 334.8125 424.0625 334.9688 422.9063 c335.9375 416.5625 334.875 409.2188 334.625 403.125 C339.0938 405.9375 341.9375 407.6563 348.3125 406.7188 C348.0938 406.5625 348.1875 405.8125 347.9375 405.625 c346.7813 404.7813 344.9688 404.0938 343.9688 403.125 c343.2188 402.3438 343 401.3125 342.1875 400.5938 c341.4063 399.9375 339.8125 398.0938 339.6563 397.7188 c338.4375 395.5938 338.2188 395.1875 v338.0625 394.9375 337.2188 394.4375 337.125 394.125 c337.0313 393.7188 336.4063 392.6563 y334.375 386.3125 337.2813 380.125 336.7813 373.2188 c336.5313 370 334.5938 360.8438 333.9063 358.4688 c333.875 358.375 333.1563 356.5625 332.8125 355.5938 c331.625 353.2813 331.0313 352 V330.0938 350.4063 329.5938 349.4688 v324.1875 343.3438 l322.1563 341.5 321.6563 341.1875 v321.1563 340.875 319.3125 339.375 318.7813 339.0313 c317.7188 338.3438 312.7188 335.8125 311.2188 335.4375 c310.375 335.2188 307.9688 334.7188 y306.875 334.4063 303.3125 334 y301.375 333.5938 297.25 333.4688 295.375 334 c292.4063 334.5625 291.4063 334.7188 v290.7813 334.8125 288.4063 335.4375 287.4688 335.7813 c285.8438 336.2813 285.3125 336.5 v284.625 336.7813 281.0938 338.5313 280.25 339.0313 c278.9375 339.8438 275.3438 342.9375 274.875 343.3438 c274.3125 343.8438 272.6875 345.875 y272.2813 346.0313 270.4688 347.9688 270.1875 348.375 c269.8125 348.9375 268.2813 351.75 268.0313 352.3438 c267.4688 353.5625 265.7813 357.3125 265.5 358.125 c264.5625 360.625 263.9063 364.7188 263.6875 367.4688 c263.625 368.4063 264.1875 369.2188 263.6875 370.7188 c263.5625 371.0625 262.4375 371.8125 262.25 372.1563 c262 372.6563 260.5 376.5938 260.4688 376.8438 c260.0313 378.9688 259.8438 384.625 260.4688 386.9063 c260.7813 390.0938 260.8125 390.875 v260.875 392.4063 261.5625 395.5938 261.1875 397.7188 c260.5 400.1875 260.0938 401.3125 v259.9063 401.875 257.9375 404.9063 Y257.4375 405.875 257.5 406.5938 256.875 407.4375 c256.5 407.9063 255 410.0313 254.6875 410.6563 C255.9063 410.625 257.625 410.9375 259.375 410.3125 c260.375 409.9688 261.354 409.6665 262.1665 409.104 c262.8857 408.6665 263.625 407.4375 264.4063 407.0625 C265.9375 404.7813 266.2188 404.5625 v266.75 404.1563 267.125 404.5938 267.6563 404.1875 C267.9375 404.8125 268.1563 405.2813 268.75 405.625 c269.3125 406 269.0938 406.7188 y269.5625 408.7188 269.3438 410.1875 269.8125 411.75 c270.8125 415.0625 272.8125 420.3438 271.25 425.4375 c271.1875 425.6563 270.7148 426.9717 270.5313 427.2188 c269.5 428.604 267.9165 431.2085 267.6665 432.771 C268.104 432.7085 269.625 432.8438 270.5313 432.625 c271.2813 432.4688 273.875 430.7813 274.5 430.4688 c275.4688 430 276.6875 427.4063 277.0313 427.2188 c278.8125 425.4375 l280.8438 424.5 280.7813 425.7188 281.3438 426.1563 c282.7813 427.2188 l283.7813 429.4063 283.2813 437.375 282.7813 439.8438 c282.25 442.1875 282.0625 442.7188 v281.3438 443.7813 280.9688 444.5 v280.875 444.75 279.9063 446.4375 279.9063 446.6563 C279.7813 446.75 279.0313 448.3125 278.8125 448.8438 c278.7188 449.0625 277.7813 450.1563 277.75 450.2813 c277.2188 451.4375 277.4063 451.9375 277.0313 453.1563 C280.25 454.1875 284.75 452.9375 288 450.6875 c291.3438 447.5313 292 445.9375 v292.0928 445.7119 294.0625 442.7188 294.3125 442.7188 C294.5625 443.4375 294.6563 443.4375 V294.375 447.0938 293.4375 453.8125 293.5938 456.75 c293.7188 459.5938 294.7188 465.4063 295.0313 466.125 c298.6563 471.1875 298.75 471.4375 v298.75 471.5 304.2813 473.8125 305.0938 474.375 Cf1 D301.125 422.5625 m301 421.5 300.1563 419.3438 300.0625 418.5938 c299.375 413.8438 299.625 408.7188 300.25 404.1875 C303 403.875 305.625 403.2188 308.125 403.1875 C308.4063 405.1563 308.5625 406.4375 307.9688 408.5 c307.875 408.9063 306.75 412.0313 306.1875 413.1875 c306.0625 413.4063 304.0625 418.5938 303.3125 420.0313 c302.875 420.875 301.625 421.75 301.125 422.5625 Cf288.5 412.5625 m287.2188 409.1563 287.125 406 287.4688 401.6563 C289.625 402.4375 290.375 402.8125 292.125 403.125 C291.625 406.5313 290.75 408.25 289.625 410.6563 C289.4375 410.6563 288.6563 412.4688 288.5 412.5625 Cf318 412.0625 m317.625 410.9063 315.5625 406.4688 315.5313 406.3438 c314.9063 404.6875 314.0938 401.3125 y313.9688 400.3438 315 401.1563 314.875 400.1875 C315.4063 400 315.9688 399.5313 316.625 399.1563 c316.9688 398.9688 318.0938 398.5313 318.375 398.4375 c318.875 398.25 319.3438 397.9063 319.875 397.7188 C320.4688 399.5938 321.375 401.4688 320.9375 404.1875 c320.8438 404.6875 320.0625 407.625 319.875 408.1563 c319.3125 409.375 319.125 409.5938 v318.75 410.0938 318.5313 411.6563 318 412.0625 Cf275.875 404.5938 m275.625 403.6875 274.5313 399.875 274.7188 398.5938 c275.4063 394.2813 276.8335 397.271 278.1665 398.604 C278.0415 399.354 278.4375 399.375 277.8335 400.4375 c277.5078 401.0103 277.375 401.5625 277.25 401.8438 c277.0625 402.25 276.0938 404.25 275.875 404.5938 Cf298.25 396.625 m295.7813 396.5313 288.8125 394.5 287.0938 393.375 c287.0625 393.375 283.9375 391.7813 282.7813 390.875 c282.2813 390.5 279.8438 388.375 279.1875 387.625 c278.7813 387.2188 277.75 385.8438 y277.5625 385.4375 277.0313 384.75 Y276.0938 383.0313 273.5938 378.125 273.4063 377.5625 c273.0625 376.4688 272.4063 373.5 272.3438 372.875 c271.9688 370.2813 272.125 365.6563 272.6875 363.5 c273.2188 361.3125 273.4063 360.625 v273.5938 360 274.7188 357.3125 274.875 357.0313 c275 356.75 276.2813 354.75 276.6563 353.7813 C277.8125 352.0625 278.4688 351.2813 v279.3438 350.3438 279.5313 350.1875 v280.0313 349.8125 282.2188 347.4063 282.7813 346.9375 c283.6563 346.25 287.1563 344.2188 287.4688 344.0625 c288.8438 343.4375 293.8125 341.9375 293.9375 341.9063 c296.5938 341.2813 301.1563 341.3438 304.0313 341.9063 c304.625 342.0313 308.5313 343.1563 309.4063 343.3438 c310.25 343.5625 313.7813 345.25 314.8125 345.875 c315.5313 346.3125 317.6875 348.1875 318.0625 348.375 c318.25 348.5 318.8438 349.3438 319.125 349.4688 c319.1563 349.5 320.8125 351.2813 320.9375 351.2813 C321.75 352.4688 324.7813 356.875 325.25 358.125 c325.6563 359.1563 326.9375 364.6875 Y327.3125 366.75 327.2813 367.6875 327.4063 368.5625 c327.75 371.0625 326.4063 378.2813 325.25 380.7813 c324.9375 381.5 323.6875 383.6875 323.4688 384.0313 c323.4063 384.125 321.9375 385.9063 321.6563 386.5625 C321.125 387.4063 320.9375 387.625 v318.4063 389.6875 317.6875 390.1563 v317.125 390.5313 315.7188 391.7813 315.5313 391.9375 c314.4688 392.9063 310.7813 394.3438 310.5 394.4688 c309 395.125 304.9688 396.2188 304.75 396.2813 c302.7813 396.6875 299.875 396.7188 298.25 396.625 cf*U*u0 D258.0566 313.7144 m258.0566 310.4492 256.0078 307.728 252.5825 307.728 c249.1572 307.728 247.1084 310.4492 247.1084 313.7144 c247.1084 316.9795 249.1572 319.7007 252.5825 319.7007 c256.0078 319.7007 258.0566 316.9795 258.0566 313.7144 cf1 D249.1089 313.7144 m249.1089 311.5215 250.1333 309.3604 252.5825 309.3604 c255.0313 309.3604 256.0557 311.5215 256.0557 313.7144 c256.0557 315.9072 255.0313 318.0684 252.5825 318.0684 c250.1333 318.0684 249.1089 315.9072 249.1089 313.7144 cf*U*u0 D263.8857 313.2183 m268.5439 313.2183 L268.5439 311.4893 L263.8857 311.4893 L263.8857 313.2183 lf*U*u283.4316 315.7949 m283.0957 317.1079 282.2471 318.0684 280.5825 318.0684 c278.1333 318.0684 277.1089 315.9072 277.1089 313.7144 c277.1089 311.5215 278.1333 309.3604 280.5825 309.3604 c282.3594 309.3604 283.3354 310.689 283.4956 312.354 c285.4482 312.354 L285.2886 309.6167 283.3516 307.728 280.5825 307.728 c277.1572 307.728 275.1084 310.4492 275.1084 313.7144 c275.1084 316.9795 277.1572 319.7007 280.5825 319.7007 c283.1597 319.6846 285.1924 318.2603 285.4326 315.7949 C283.4316 315.7949 lf*U*u286.627 312.1455 m286.627 314.6748 288.1475 316.4995 290.8047 316.4995 c293.4619 316.4995 294.9824 314.6748 294.9824 312.1455 c294.9824 309.6006 293.4619 307.7759 290.8047 307.7759 c288.1475 307.7759 286.627 309.6006 286.627 312.1455 cf1 D293.1577 312.1455 m293.1577 313.5703 292.4375 315.0586 290.8047 315.0586 c289.1719 315.0586 288.4517 313.5703 288.4517 312.1455 c288.4517 310.7051 289.1719 309.2163 290.8047 309.2163 c292.4375 309.2163 293.1577 310.7051 293.1577 312.1455 cf*U*u0 D296.4956 316.2754 m298.2241 316.2754 L298.2241 315.123 L298.2725 315.123 L298.8164 315.9395 299.5049 316.4995 300.8174 316.4995 c301.8257 316.4995 302.77 316.0674 303.1382 315.123 c303.7466 315.9712 304.5308 316.4995 305.7314 316.4995 c307.4761 316.4995 308.5005 315.731 308.5005 313.7144 c308.5005 308 L306.6758 308 L306.6758 312.834 L306.6758 314.1465 306.5957 315.0586 305.1709 315.0586 c303.9385 315.0586 303.4102 314.2427 303.4102 312.8501 c303.4102 308 L301.5854 308 L301.5854 313.314 L301.5854 314.4507 301.2334 315.0586 300.1289 315.0586 c299.1846 315.0586 298.3203 314.2905 298.3203 312.9141 c298.3203 308 L296.4956 308 L296.4956 316.2754 lf*U*u310.4614 319.4287 m312.2861 319.4287 L312.2861 315.2031 L312.3184 315.2031 L312.8145 316.0034 313.855 316.4995 314.7832 316.4995 c317.3921 316.4995 318.6567 314.5146 318.6567 312.0977 c318.6567 309.873 317.5366 307.7759 315.0874 307.7759 c313.9668 307.7759 312.7666 308.0479 312.2222 309.1367 c312.1904 309.1367 L312.1904 308 L310.4614 308 L310.4614 319.4287 lf1 D314.543 315.0586 m313.0068 315.0586 312.2222 313.8906 312.2222 312.1299 c312.2222 310.4648 313.0708 309.2163 314.543 309.2163 c316.208 309.2163 316.832 310.689 316.832 312.1299 c316.832 313.6343 316.0479 315.0586 314.543 315.0586 cf*U*u0 D327.4541 308 m325.6611 308 L325.6611 309.1523 L325.6289 309.1523 L325.1812 308.3203 324.1885 307.7759 323.2764 307.7759 c321.1152 307.7759 320.187 308.8643 320.187 311.0254 c320.187 316.2754 L322.0117 316.2754 L322.0117 311.2012 L322.0117 309.7446 322.604 309.2163 323.5962 309.2163 c325.1167 309.2163 325.6289 310.1929 325.6289 311.4736 c325.6289 316.2754 L327.4541 316.2754 L327.4541 308 lf*U*u329.3706 316.2754 m331.083 316.2754 L331.083 314.6748 L331.1152 314.6748 L331.3232 315.5552 332.4116 316.4995 333.5322 316.4995 c333.9482 316.4995 334.0605 316.4673 334.2207 316.4512 c334.2207 314.6909 L333.9644 314.7227 333.6924 314.7705 333.436 314.7705 c332.1875 314.7705 331.1953 313.7622 331.1953 311.9375 c331.1953 308 L329.3706 308 L329.3706 316.2754 lf*U*u341.9302 309.8408 m341.9302 309.3926 342.0264 309.2163 342.3623 309.2163 c342.4746 309.2163 342.6187 309.2163 342.8105 309.2485 c342.8105 307.9839 L342.5386 307.8882 341.9624 307.7759 341.6582 307.7759 c340.9219 307.7759 340.3936 308.0322 340.2495 308.7842 c339.5293 308.0801 338.3608 307.7759 337.3843 307.7759 c335.896 307.7759 334.5513 308.5762 334.5513 310.1929 c334.5513 312.2578 336.1997 312.5938 337.7368 312.77 c339.0493 313.0098 340.2178 312.8662 340.2178 313.9385 c340.2178 314.8828 339.2412 315.0586 338.5049 315.0586 c337.4805 315.0586 336.7603 314.6426 336.6802 313.7461 c334.8555 313.7461 L334.9834 315.875 336.792 316.4995 338.6167 316.4995 c340.2334 316.4995 341.9302 315.8433 341.9302 314.0986 C341.9302 309.8408 lf1 D340.1055 312.1455 m339.5454 311.7773 338.665 311.7935 337.8647 311.6494 c337.0801 311.5215 336.376 311.2334 336.376 310.2729 c336.376 309.4565 337.4165 309.2163 338.0566 309.2163 c338.8569 309.2163 340.1055 309.6328 340.1055 310.7852 C340.1055 312.1455 lf*U*u0 D343.894 316.2754 m345.6226 316.2754 L345.6226 315.0586 L345.6548 315.0269 L346.1987 315.9395 347.1436 316.4995 348.2314 316.4995 c350.0244 316.4995 351.1611 315.5391 351.1611 313.6821 c351.1611 308 L349.3364 308 L349.3364 313.2021 L349.3042 314.4985 348.792 315.0586 347.7197 315.0586 c346.5029 315.0586 345.7188 314.0986 345.7188 312.8818 c345.7188 308 L343.894 308 L343.894 316.2754 lf*U*u352.2451 316.2754 m353.6216 316.2754 L353.6216 318.7563 L355.4463 318.7563 L355.4463 316.2754 L357.0952 316.2754 L357.0952 314.915 L355.4463 314.915 L355.4463 310.4971 L355.4463 309.7446 355.5107 309.3604 356.3271 309.3604 c356.583 309.3604 356.8389 309.3604 357.0952 309.4248 c357.0952 308.0161 L356.6948 307.9839 356.311 307.9199 355.9106 307.9199 c354.0059 307.9199 353.6538 308.6563 353.6216 310.0327 c353.6216 314.915 L352.2451 314.915 L352.2451 316.2754 lf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF